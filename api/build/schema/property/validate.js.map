{"version":3,"sources":["../../../src/schema/property/validate.js"],"names":["input","ctx","property","data","validate","p","field","fromGlobalId","as"],"mappings":";;;AAGe,wBAAeA,KAAf,EAA2BC,GAA3B,EAAyC;AACtD,QAAMC,QAAQ,GAAG,EAAE,GAAGF,KAAL,EAAjB;;AAEA,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,QAAJ,CAAaF,QAAb,EAAuB,CAAAG,CAAC;AACzCA,EAAAA,CAAC;AACEC,EAAAA,KADH,CACS,IADT;AAEGC,EAAAA,YAFH,CAEgB,UAFhB;AAGGD,EAAAA,KAHH,CAGS,eAHT,EAG0B,EAAEE,EAAE,EAAE,iBAAN,EAH1B;AAIGF,EAAAA,KAJH,CAIS,eAJT,EAI0B,EAAEE,EAAE,EAAE,gBAAN,EAJ1B;AAKGF,EAAAA,KALH,CAKS,aALT,EAKwB,EAAEE,EAAE,EAAE,cAAN,EALxB;AAMGF,EAAAA,KANH,CAMS,kBANT,EAM6B,EAAEE,EAAE,EAAE,oBAAN,EAN7B,CADiB,CAAnB;;;AAUA,SAAOL,IAAP;AACD","sourcesContent":["/* @flow */\nimport { type Context } from '../../Context';\n\nexport default async function(input: any, ctx: Context) {\n  const property = { ...input };\n\n  const data = await ctx.validate(property)(p =>\n    p\n      .field('id')\n      .fromGlobalId('Property')\n      .field('numberOfRooms', { as: 'number_of_rooms' })\n      .field('livingSurface', { as: 'living_surface' })\n      .field('landSurface', { as: 'land_surface' })\n      .field('numberOfParkings', { as: 'number_of_parkings' }),\n  );\n\n  return data;\n}\n"]}